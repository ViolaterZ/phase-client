// src/abstraction/index.ts
import { activePort } from "virtual:fs";
var url = `http://localhost:${activePort}`;
var fs = {
  async readdir(path, withFileTypes) {
    const res = await fetch(`${url}/${path}?cmd=readdir${withFileTypes ? "&withFileTypes=true" : ""}`);
    if (res.status === 200) {
      const data = await res.json();
      return data;
    }
    throw new Error(await res.text());
  },
  async readFile(path) {
    const res = await fetch(`${url}/${path}?cmd=readFile`);
    if (res.status === 200) {
      const data = await res.text();
      return data;
    }
    throw new Error(await res.text());
  },
  async stat(path) {
    const res = await fetch(`${url}/${path}?cmd=stat`);
    if (res.status === 200) {
      const data = await res.json();
      return data;
    }
    throw new Error(await res.text());
  },
  async writeFile(path, data) {
    await fetch(`${url}/${path}?cmd=writeFile`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json"
      },
      body: JSON.stringify({ data })
    });
  },
  async rm(path, options) {
    const res = await fetch(`${url}/${path}?cmd=rm${(options == null ? void 0 : options.recursive) ? "&recursive=true" : ""}${(options == null ? void 0 : options.force) ? "&force=true" : ""}`, {
      method: "DELETE"
    });
    if (res.status === 200) {
      return;
    }
    throw new Error(await res.text());
  }
};
var abstraction_default = fs;
export {
  abstraction_default as default
};
