var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/abstraction/index.ts
var abstraction_exports = {};
__export(abstraction_exports, {
  default: () => abstraction_default
});
module.exports = __toCommonJS(abstraction_exports);
var import_virtual_fs = require("virtual:fs");
var url = `http://localhost:${import_virtual_fs.activePort}`;
var fs = {
  async readdir(path, withFileTypes) {
    const res = await fetch(`${url}/${path}?cmd=readdir${withFileTypes ? "&withFileTypes=true" : ""}`);
    if (res.status === 200) {
      const data = await res.json();
      return data;
    }
    throw new Error(await res.text());
  },
  async readFile(path) {
    const res = await fetch(`${url}/${path}?cmd=readFile`);
    if (res.status === 200) {
      const data = await res.text();
      return data;
    }
    throw new Error(await res.text());
  },
  async stat(path) {
    const res = await fetch(`${url}/${path}?cmd=stat`);
    if (res.status === 200) {
      const data = await res.json();
      return data;
    }
    throw new Error(await res.text());
  },
  async writeFile(path, data) {
    await fetch(`${url}/${path}?cmd=writeFile`, {
      method: "POST",
      headers: {
        "Content-Type": "application/json"
      },
      body: JSON.stringify({ data })
    });
  },
  async rm(path, options) {
    const res = await fetch(`${url}/${path}?cmd=rm${(options == null ? void 0 : options.recursive) ? "&recursive=true" : ""}${(options == null ? void 0 : options.force) ? "&force=true" : ""}`, {
      method: "DELETE"
    });
    if (res.status === 200) {
      return;
    }
    throw new Error(await res.text());
  }
};
var abstraction_default = fs;
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {});
